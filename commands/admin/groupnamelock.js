module.exports = {
  name: "groupnamelock",
  execute(api, threadID, args, event, botState, isMaster) {
    if (!isMaster && !botState.adminList.includes(event.senderID)) {
      return api.sendMessage("ЁЯЪл рдпреЗ рдХрдорд╛рдВрдб рд╕рд┐рд░реНрдл рдорд╛рд╕реНрдЯрд░ рдпрд╛ рдПрдбрдорд┐рдиреНрд╕ рдХреЗ рд▓рд┐рдП рд╣реИ!", threadID);
    }

    if (args.length < 1) {
      return api.sendMessage("ЁЯФН рдпреВрдЬ: #groupnamelock <on/off> [рдЧреНрд░реБрдк_рдирд╛рдо]", threadID);
    }

    const action = args[0].toLowerCase(); // Fix: args[0] is 'on' or 'off'
    const groupName = args.slice(1).join(" ").trim() || botState.lockedGroups[threadID]; // Fix: Join all remaining args for name with spaces

    if (!action) {
      return api.sendMessage("ЁЯФН рдпреВрдЬ: #groupnamelock <on/off> [рдЧреНрд░реБрдк_рдирд╛рдо]", threadID);
    }

    // Early admin permission check
    api.getThreadInfo(threadID, (err, info) => {
      if (err || !info) {
        api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдЬрд╛рдирдХрд╛рд░реА рд▓рд╛рдиреЗ рдореЗрдВ рдЕрд╕рдлрд▓ред", threadID);
        return;
      }
      if (!info.adminIDs.some(admin => admin.id === api.getCurrentUserID())) {
        api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдмреЙрдЯ рдХреЛ рдПрдбрдорд┐рди рдкрд░рдорд┐рд╢рди рдЪрд╛рд╣рд┐рдПред", threadID);
        console.log('[DEBUG] Bot lacks admin permissions for group name lock');
        return;
      }

      if (action === "on") {
        if (!groupName) {
          return api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдирд╛рдо рдбрд╛рд▓реЛ, рдЬреИрд╕реЗ: #groupnamelock on ramukakakaaka", threadID);
        }
        botState.lockedGroups[threadID] = groupName;
        api.setTitle(groupName, threadID, (err) => {
          if (err) {
            console.error("Group name lock error:", err.message);
            return api.sendMessage("тЪая╕П рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рдХрд░рдиреЗ рдореЗрдВ рдЧрд▓рддреА (API рдЗрд╢реНрдпреВ)ред рдмреЙрдЯ рдХреЛ рдПрдбрдорд┐рди рдкрд░рдорд┐рд╢рди рдЪрд╛рд╣рд┐рдПред", threadID);
          }
          api.sendMessage(`ЁЯФТ рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рд╣реЛ рдЧрдпрд╛: ${groupName}`, threadID);
        });
      } else if (action === "off") {
        delete botState.lockedGroups[threadID];
        api.sendMessage("ЁЯФУ рдЧреНрд░реБрдк рдирд╛рдо рдЕрдирд▓реЙрдХ рд╣реЛ рдЧрдпрд╛ред", threadID);
      } else {
        api.sendMessage("тЭМ рдЧрд▓рдд рдПрдХреНрд╢рдиред рдпреВрдЬ: #groupnamelock <on/off> [рдЧреНрд░реБрдк_рдирд╛рдо]", threadID);
      }
    });
  }
};
